Control cursor with stick (BETA) [Feder]
040001e0 41800000
C0000000 0000000B
3D608058 C16B5F40
C18B5F44 3D208057
3D408000 C04973A0
C06973A4 C1AA01E0
ED6B0372 ED8C0372
EC42582A EC63602A
A16B5EE2 71600400
41A2000C C04A01E0
C06A01E0 D04973A0
D06973A4 4E800020
60000000 00000000
*B to recenter

CODE EXPLAINED:
# THIS CODE MAKES USE OF E.V.A. BYTES 0x1e0-0x1e3 (only to load floats)
# Must add this non-asm line at the beginning: 040001e0 40000000 (it sets the speed constant)
lis r11, 0x8058
lfs f11, 0x5F40 (r11) # load stick X
lfs f12, 0x5F44 (r11) # load stick Y

lis r9, 0x8057
lis r10, 0x8000
lfs f2, 0x73a0 (r9)  # load cursorX
lfs f3, 0x73a4 (r9)  # load cursorY
lfs f13, 0x1e0 (r10) # load speed constant

fmuls f11, f11, f13  # multiply stick X and Y by speed constant
fmuls f12, f12, f13
fadds f2, f2, f11  # update cursorX
fadds f3, f3, f12  # update cursorY

lhz r11, 0x5ee2 (r11)
andi. r0, r11, 0x0400 # check if B pressed
beq+ NOT_RECENTER
lfs f2, 0x1e0 (r10) # set x to (almost) 0
lfs f3, 0x1e0 (r10) # set y to (almost) 0
NOT_RECENTER:

stfs f2, 0x73a0 (r9)  # store cursorX
stfs f3, 0x73a4 (r9)  # store cursorY
blr
